{"version":3,"sources":["styles.ts","services/api.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Container","styled","div","Content","EntriesContainer","UploadInput","shade","api","axios","create","baseURL","headers","App","useState","lineData","setLineData","barData","setBarData","uploading","setUploading","numberOfSales","setNumberOfSales","entriesPerPage","setEntriesPerPage","bestSellingProducts","useCallback","params","start_date","end_date","entries_per_page","get","then","response","products","data","map","product","product_code","product_description","quantity","salesByMonth","sales","handleSalesChange","e","a","target","files","FormData","append","post","inserted","message","success","catch","err","handleReloadSalesClick","handleDeleteSalesClick","delete","error","handleEntriesInputChange","parseInt","value","useEffect","fetchData","number_of_sales","className","style","display","ResponsiveContainer","minWidth","minHeight","LineChart","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Line","type","stroke","activeDot","r","BarChart","content","active","payload","label","length","CustomTooltip","Bar","name","fill","htmlFor","id","onChange","icon","DeleteOutlined","onClick","block","ghost","ReloadOutlined","LoadingOutlined","UploadOutlined","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f4502615.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport { shade } from 'polished';\n\nexport const Container = styled.div`\n  min-height: 750px;\n  min-width: 750px;\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  /* justify-content: center; */\n  align-items: center;\n  place-content: center;\n\n  width: 100%;\n  \n  margin: 50px auto 0;\n\n  button {\n    margin-bottom:8px;\n  }\n`;\n\nexport const EntriesContainer = styled.div `\n  display: flex;\n  flex-direction: row;\n\n  width: 100%;\n\n  white-space: nowrap;\n\n  label {\n    font-size:18px;\n    margin-bottom: 8px;\n  }\n\n  input {\n    margin-bottom: 8px;\n  }\n\n`\nexport const UploadInput = styled.div`\n  margin-bottom: 32px;\n  position: relative;\n  align-self: center;\n\n  img {\n    width: 186px;\n    height: 186px;\n    border-radius: 50%;\n  }\n\n  label {\n    position: absolute;\n    width: 48px;\n    height: 48px;\n    background: #8884d8;\n    border-radius: 50%;\n    right: 0;\n    bottom: 0;\n    border: 0;\n    transition:background-color 0.2s; \n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    \n    cursor: pointer;\n\n    input {\n      display:  none;\n    }\n\n    svg {\n      width: 20px;\n      height: 20px;\n      color: #312e38;\n    }\n\n    &:hover {\n      background: ${shade(0.2, '#8884d8')}\n    }\n  }\n`\n\n\n","import axios from 'axios'\n\nconst api = axios.create({\n  baseURL: 'http://localhost:5000/',\n  headers: {\n    \"Content-type\": \"application/json\"\n  }\n});\n\nexport default api;\n","import React, { ChangeEvent, useCallback, useEffect, useState } from 'react';\nimport './App.css';\nimport { Container, Content, UploadInput, EntriesContainer } from './styles';\n\nimport {\n  UploadOutlined,\n  LoadingOutlined,\n  DeleteOutlined,\n  ReloadOutlined\n} from '@ant-design/icons'\n\n\nimport {\n  CartesianGrid,\n  Line,\n  LineChart,\n  BarChart,\n  XAxis,\n  YAxis,\n  Tooltip,\n  Bar,\n  ResponsiveContainer\n} from 'recharts';\n\nimport {\n  Col,\n  Button,\n  message,\n  Input\n} from 'antd';\n\nimport api from './services/api';\n\ninterface INumberOfSalesResponse {\n  number_of_sales: number;\n}\n\ninterface IUploadSalesResponse {\n  inserted: number;\n  message: string;\n}\n\ninterface IProductResponseData {\n  product_code: string,\n  product_description: string,\n  quantity: number\n}\n\ninterface ISalesResponseData {\n  month: number;\n  quantity: number;\n  amount: number;\n}\n\nconst App: React.FC = () => {\n  const [lineData, setLineData] = useState<ISalesResponseData[]>([]);\n  const [barData, setBarData] = useState([]);\n  const [uploading, setUploading] = useState(false);\n  const [numberOfSales, setNumberOfSales] = useState(0);\n  const [entriesPerPage, setEntriesPerPage] = useState(20);\n\n  const bestSellingProducts = useCallback(() =>{\n    const params = {\n      start_date: '2018-01-01',\n      end_date: '2018-12-31',\n      entries_per_page: entriesPerPage\n    }\n\n    api.get('api/v1/sales/best-selling-products', { params }).then(response => {\n      const products = response.data.products.map((product: IProductResponseData) => {\n        const {product_code, product_description, quantity} = product;\n\n        return {\n          \"_id\": `${product_code} - ${product_description}`,\n          \"quantity\": quantity\n        }\n      });\n      setBarData(products);\n    });\n  },[setBarData, entriesPerPage]);\n\n  const salesByMonth = useCallback(() =>{\n    const params = {\n      start_date: '2018-01-01',\n      end_date: '2018-12-31',\n    }\n    \n    api.get('api/v1/sales/by-month', { params }).then(response => {\n      setLineData(response.data.sales);\n    })\n\n  },[setLineData])\n\n  const handleSalesChange = useCallback(async (e: ChangeEvent<HTMLInputElement>) => {\n    if (e.target.files) {\n      setUploading(true);\n\n      const data = new FormData();\n\n      data.append('file', e.target.files[0]);\n      \n      api.post<IUploadSalesResponse>('api/v1/sales/upload', data).then(response => {\n        setNumberOfSales(response.data.inserted);\n        setUploading(false);\n        e.target.files = null;\n        message.success(response.data.message);\n      }).catch(err => {\n        setUploading(false);\n        e.target.files = null;\n      });\n\n    }\n  }, [setUploading]);\n\n  const handleReloadSalesClick = useCallback(() => {\n   bestSellingProducts();\n   salesByMonth(); \n  },[bestSellingProducts,salesByMonth]);\n\n  const handleDeleteSalesClick = useCallback(() => {\n    api.delete('api/v1/sales/all').then(response => {\n      setBarData([])\n      setLineData([])\n      setNumberOfSales(0)\n    }).catch(error => {\n      message.error(error)\n    })\n  }, [setBarData, setLineData, setNumberOfSales])\n\n  const handleEntriesInputChange = useCallback(async(e:ChangeEvent<HTMLInputElement>) =>{\n    setEntriesPerPage(parseInt(e.target.value))\n  }, [setEntriesPerPage])\n\n  const CustomTooltip = ({ active, payload, label }:{active:any; payload:any; label:any}) => {\n    if (active && payload && payload.length) {\n      return (\n        <div className=\"custom-tooltip\">\n          <p className=\"label\">{`${label} : ${payload[0].value}`}</p>         \n        </div>\n      );\n    }\n  \n    return null;\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await\n          api.get<INumberOfSalesResponse>('api/v1/sales/number-of-sales');\n        setNumberOfSales(response.data.number_of_sales);\n      } catch (error) {\n        setNumberOfSales(0);\n      }\n    }\n\n    fetchData();\n  }, [setNumberOfSales]);\n\n  useEffect(()=>{\n\n    if (numberOfSales) {\n      handleReloadSalesClick();\n    }\n\n  },[numberOfSales, handleReloadSalesClick])\n\n  \n  return (\n    <header className=\"App-header\">\n      <div className=\"App\">\n\n        <Container style={{ display: numberOfSales === 0 ? 'none' : 'flex' }}>\n          <Content>\n            <ResponsiveContainer minWidth={600} minHeight={300}>\n              <LineChart data={lineData} >\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"month\" />\n                <YAxis />\n                <Tooltip/>\n                <Line type=\"monotone\" dataKey=\"quantity\" stroke=\"#8884d8\" activeDot={{ r: 8 }} />\n                <Line type=\"monotone\" dataKey=\"amount\" stroke=\"#82ca9d\" />\n              </LineChart>\n            </ResponsiveContainer>\n\n            <ResponsiveContainer minWidth={600} minHeight={300}>\n              <BarChart data={barData}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"_id\" />\n                <YAxis />\n                <Tooltip content={({ active, payload, label })=>CustomTooltip({active, payload, label}) } />\n                <Bar name=\"Produtos mais vendidos\" dataKey=\"quantity\" fill=\"#8884d8\" />\n              </BarChart>\n            </ResponsiveContainer>\n\n            <EntriesContainer >\n              <label htmlFor=\"entriesPerPage\"> Número de registros: </label>\n              <Input id='entriesPerPage' value={entriesPerPage} type={'number'} onChange={handleEntriesInputChange}/>\n            </EntriesContainer>            \n\n            <Button\n              icon={<DeleteOutlined />}\n              onClick={handleDeleteSalesClick}\n              block\n              ghost\n            >\n              Limpar banco de dados\n            </Button>\n\n            <Button\n              icon={<ReloadOutlined />}\n              onClick={handleReloadSalesClick}\n              block\n              ghost\n            >\n              Atualizar dados\n            </Button>\n          </Content>\n        </Container>\n        <Col style={{ display: numberOfSales !== 0 ? 'none' : 'flex' }}>\n          <UploadInput>\n            <label htmlFor=\"sales_file\">\n              {uploading ? <LoadingOutlined /> : <UploadOutlined />}\n              <input\n                type=\"file\"\n                name=\"sales_file\"\n                id=\"sales_file\"\n                onChange={handleSalesChange} />\n            </label>\n          </UploadInput>\n        </Col>\n      </div>\n    </header>\n  )\n}\n\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'antd/dist/antd.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}